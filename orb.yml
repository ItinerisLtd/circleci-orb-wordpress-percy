version: 2.1

################################################################################################
# GitHub: https://github.com/ItinerisLtd/circleci-orbs-wordpress-percy/blob/master/src/orb.yml #
# CircleCI: https://circleci.com/orbs/registry/orb/itinerisltd/wordpress-percy                 #
################################################################################################

description: |
  Take percy.io snapshots at WordPress (Bedrock) projects via PercyScript
  Source Code: https://github.com/ItinerisLtd/circleci-orbs-wordpress-percy/blob/master/src/orb.yml

orbs:
  composer: itinerisltd/composer@0.3
  yarn: itinerisltd/yarn@0.4

jobs:
  snapshot:
    parameters:
      executor:
        type: executor
        default: php-73
      dot-env:
        type: string
        description: .env file that contain nonsecret environment variables
        default: .env.percy
      wp-migrate-db-url:
        type: string
        description: remote site's `site_url`, used in `$ wp migratedb pull`
        default: $WP_MIGRATE_DB_URL
      wp-migrate-db-secret-key:
        type: string
        description: remote site's secret key, used in `$ wp migratedb pull`
        default: $WP_MIGRATE_DB_SECRET_KEY
      serve-command:
        type: string
        default: wp server --docroot=web
        description: server start command to run in the background before taking snapshots
      snapshot-command:
        type: string
        default: yarn percy:exec --baseUrl=http://localhost:8080
        description: custom command to take snapshots
    executor: << parameters.executor >>
    working_directory: ~/project
    steps:
      - run: node --version
      - run: yarn versions
      - run: php --version
      - run: wp --info
      - run: which mysql

      - checkout

      - composer/restore_composer_cache:
          working-dir: .
      - composer/exec:
          command: install --no-dev --prefer-dist --no-interaction
          working-dir: .
      - composer/save_composer_cache:
          working-dir: .

      - composer/restore_composer_cache:
          working-dir: web/app/themes/itineris
      - composer/exec:
          command: install --no-dev --prefer-dist --no-interaction
          working-dir: web/app/themes/itineris
      - composer/save_composer_cache:
          working-dir: web/app/themes/itineris

      - yarn/restore_yarn_cache
      - yarn/exec:
          command: install --frozen-lockfile
      - yarn/save_yarn_cache

      - yarn/restore_yarn_cache:
          cwd: web/app/themes/itineris
      - yarn/exec:
          command: install --frozen-lockfile
          cwd: web/app/themes/itineris
      - yarn/save_yarn_cache:
          cwd: web/app/themes/itineris

      - yarn/exec:
          command: build:production
          cwd: web/app/themes/itineris

      - run: cp << parameters.dot-env >> .env
      - run: wp db reset --yes --skip-packages --skip-themes --skip-plugins
      - run: wp core install --url='http://localhost:8080' --title=Percy --admin_user=percy --admin_email='percy@circleci.test' --skip-email --skip-packages --skip-themes --skip-plugins

      # TODO: Allow using other database migration tools
      - run: wp plugin activate wp-migrate-db-pro wp-migrate-db-pro-cli --skip-packages --skip-themes --skip-plugins

      - run:
          name: Wake up sleeping remote server
          command: dockerize -wait << parameters.wp-migrate-db-url >> -timeout 1m

      - run: wp migratedb pull << parameters.wp-migrate-db-url >> << parameters.wp-migrate-db-secret-key >>
      - run: wp core update-db --skip-packages --skip-themes --skip-plugins

      - run: wp rewrite flush

      - run:
          name: Start WordPress server
          command: << parameters.serve-command >>
          background: true

      - run:
          name: Wait for database and WordPress server booted
          command: dockerize -wait tcp://localhost:3306 -wait tcp://localhost:8080 -timeout 1m

      - run:
          name: Take snapshots
          command: << parameters.snapshot-command >>

executors:
  php-latest:
    parameters:
      web-image:
        type: string
        default: itinerisltd/wordpress-percy:php-latest
      db-image: &db-image
        type: string
        default: circleci/mariadb:latest-ram
    docker: &docker
        - image: << parameters.web-image >>
        - image: << parameters.db-image >>
  php-7:
    parameters:
      web-image:
        type: string
        default: itinerisltd/wordpress-percy:php-7
      db-image: *db-image
    docker: *docker
  php-73:
    parameters:
      web-image:
        type: string
        default: itinerisltd/wordpress-percy:php-73
      db-image: *db-image
    docker: *docker
  php-72:
    parameters:
      web-image:
        type: string
        default: itinerisltd/wordpress-percy:php-72
      db-image: *db-image
    docker: *docker
